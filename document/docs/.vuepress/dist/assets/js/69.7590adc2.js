(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{373:function(v,_,l){"use strict";l.r(_);var e=l(14),t=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"生命周期"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[v._v("#")]),v._v(" 生命周期")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("数据代理完成前后：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("beforeCreate")]),v._v(" "),_("ul",[_("li",[v._v("在组件实例初始化完成之后立即调用。")]),v._v(" "),_("li",[v._v("此时无法访问 data ，methods")])])]),v._v(" "),_("li",[_("code",[v._v("created")]),v._v(" "),_("ul",[_("li",[v._v("在组件实例处理完所有与状态相关的选项后调用。")]),v._v(" "),_("li",[v._v("此时可以访问 data ，methods")])])])])]),v._v(" "),_("li",[_("p",[v._v("解析模板，生成虚拟 DOM ，页面还不能显示解析好的内容")])]),v._v(" "),_("li",[_("p",[v._v("组件被挂载前后")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("beforeMount")]),v._v(" "),_("ul",[_("li",[v._v("在组件被挂载之前调用。")]),v._v(" "),_("li",[v._v("当这个钩子被调用时，组件已经完成了其响应式状态的设置，但还没有创建 DOM 节点。它即将首次执行 DOM 渲染过程。")])])]),v._v(" "),_("li",[_("code",[v._v("mounted")]),v._v(" "),_("ul",[_("li",[v._v("在组件被挂载之后调用。")]),v._v(" "),_("li",[v._v("页面呈现的是经过 Vue 编译的 DOM")]),v._v(" "),_("li",[v._v("此时对 DOM 的操作有效")])])])])]),v._v(" "),_("li",[_("p",[v._v("数据更新前后")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("beforeUpdate")]),v._v(" "),_("ul",[_("li",[v._v("在组件即将因为一个响应式状态变更而更新其 DOM 树之前调用。")])])]),v._v(" "),_("li",[_("code",[v._v("updated")]),v._v(" "),_("ul",[_("li",[v._v("在组件因为一个响应式状态变更而更新其 DOM 树之后调用。")])])])])]),v._v(" "),_("li",[_("p",[v._v("组件实例被卸载前后")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("beforeUnmount")]),v._v(" "),_("ul",[_("li",[v._v("在一个组件实例被卸载之前调用。")])])]),v._v(" "),_("li",[_("code",[v._v("unmounted")]),v._v(" "),_("ul",[_("li",[v._v("在一个组件实例被卸载之后调用。")])])])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);