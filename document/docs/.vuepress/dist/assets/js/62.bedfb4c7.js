(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{365:function(v,e,_){"use strict";_.r(e);var t=_(14),a=Object(t.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"组合式-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组合式-api"}},[v._v("#")]),v._v(" 组合式 API")]),v._v(" "),e("p",[v._v("将同一个逻辑关注点的相关代码收集在一起")]),v._v(" "),e("h3",{attrs:{id:"用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[v._v("#")]),v._v(" 用法")]),v._v(" "),e("p",[v._v("类似 "),e("code",[v._v("data")]),v._v("，"),e("code",[v._v("setup")]),v._v(" 选项为一个函数，接收 "),e("code",[v._v("props")]),v._v(" 和 "),e("code",[v._v("context")]),v._v(" 两个参数\n"),e("code",[v._v("setup")]),v._v(" 选项在组件被创建之前执行（早于 "),e("code",[v._v("beforeCreate")]),v._v(" 和 "),e("code",[v._v("created")]),v._v(" 生命周期函数），一旦 "),e("code",[v._v("props")]),v._v(" 被解析完成，他就将被作为组合式 API 的入口")]),v._v(" "),e("p",[e("code",[v._v("setup")]),v._v(" 中避免使用 "),e("code",[v._v("this")]),v._v("（因为创建时间）\n"),e("code",[v._v("setup")]),v._v(" 返回的所有内容都会暴露给组建的其余部分（计算属性、方法、生命周期钩子等）\n"),e("code",[v._v("setup")]),v._v(" 不是响应式，响应式使用方法：")]),v._v(" "),e("ul",[e("li",[v._v("ref() 可以持有任何类型的值，包括深层嵌套的对象、数组或者 JavaScript 内置的数据结构，比如 Map。\n"),e("ul",[e("li",[v._v("ref() 函数接收参数,并将其包裹在一个带有 "),e("code",[v._v(".value")]),v._v(" 属性的 ref 对象中返回")]),v._v(" "),e("li",[v._v("模板中不需要 "),e("code",[v._v(".value")])])])]),v._v(" "),e("li",[v._v("通过 reactive() 定义引用数据类型\n"),e("ul",[e("li",[v._v("接受一个对象作为参数、")]),v._v(" "),e("li",[v._v("通过解构会使对象中的属性无法响应式\n"),e("ul",[e("li",[v._v("...toRefs(obj) 可使其维持响应式")])])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);